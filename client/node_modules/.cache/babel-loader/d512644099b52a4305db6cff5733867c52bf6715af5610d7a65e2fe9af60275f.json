{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\intel-project\\\\client\\\\src\\\\components\\\\ScheduleTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { useTable, useFilters } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ScheduleTable({\n  schedule,\n  machines\n}) {\n  _s();\n  const data = useMemo(() => schedule.map(task => {\n    var _machines$find;\n    return {\n      job_id: task.job_id,\n      machine_name: ((_machines$find = machines.find(m => m.id.toString() === task.machine_id)) === null || _machines$find === void 0 ? void 0 : _machines$find.name) || task.machine_id,\n      start_time: new Date(task.start_time).toLocaleString(),\n      end_time: new Date(task.end_time).toLocaleString(),\n      duration: ((new Date(task.end_time) - new Date(task.start_time)) / 1000 / 60).toFixed(2)\n    };\n  }), [schedule, machines]);\n  const columns = useMemo(() => [{\n    Header: 'Job ID',\n    accessor: 'job_id',\n    Filter: TextFilter,\n    filter: 'includes'\n  }, {\n    Header: 'Machine',\n    accessor: 'machine_name',\n    Filter: TextFilter,\n    filter: 'includes'\n  }, {\n    Header: 'Start Time',\n    accessor: 'start_time',\n    Filter: TextFilter,\n    filter: 'includes'\n  }, {\n    Header: 'End Time',\n    accessor: 'end_time',\n    Filter: TextFilter,\n    filter: 'includes'\n  }, {\n    Header: 'Duration (min)',\n    accessor: 'duration',\n    Filter: TextFilter,\n    filter: 'includes'\n  }], []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useFilters);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Schedule Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render('Filter') : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n// Simple text filter component\n_s(ScheduleTable, \"LUTtS0CpZPmGqwLsl+PcNx+WvAg=\", false, function () {\n  return [useTable];\n});\n_c = ScheduleTable;\nfunction TextFilter({\n  column: {\n    filterValue,\n    setFilter\n  }\n}) {\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: filterValue || '',\n    onChange: e => setFilter(e.target.value || undefined),\n    placeholder: `Filter...`,\n    style: {\n      width: '100%',\n      marginTop: '5px',\n      padding: '5px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_c2 = TextFilter;\nexport default ScheduleTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"ScheduleTable\");\n$RefreshReg$(_c2, \"TextFilter\");","map":{"version":3,"names":["React","useMemo","useTable","useFilters","jsxDEV","_jsxDEV","ScheduleTable","schedule","machines","_s","data","map","task","_machines$find","job_id","machine_name","find","m","id","toString","machine_id","name","start_time","Date","toLocaleString","end_time","duration","toFixed","columns","Header","accessor","Filter","TextFilter","filter","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","children","fileName","_jsxFileName","lineNumber","columnNumber","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","canFilter","row","getRowProps","cells","cell","getCellProps","_c","filterValue","setFilter","value","onChange","e","target","undefined","placeholder","style","width","marginTop","padding","_c2","$RefreshReg$"],"sources":["C:/Coding/intel-project/client/src/components/ScheduleTable.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport { useTable, useFilters } from 'react-table';\r\n\r\nfunction ScheduleTable({ schedule, machines }) {\r\n  const data = useMemo(\r\n    () =>\r\n      schedule.map(task => ({\r\n        job_id: task.job_id,\r\n        machine_name: machines.find(m => m.id.toString() === task.machine_id)?.name || task.machine_id,\r\n        start_time: new Date(task.start_time).toLocaleString(),\r\n        end_time: new Date(task.end_time).toLocaleString(),\r\n        duration: ((new Date(task.end_time) - new Date(task.start_time)) / 1000 / 60).toFixed(2),\r\n      })),\r\n    [schedule, machines]\r\n  );\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Job ID',\r\n        accessor: 'job_id',\r\n        Filter: TextFilter,\r\n        filter: 'includes',\r\n      },\r\n      {\r\n        Header: 'Machine',\r\n        accessor: 'machine_name',\r\n        Filter: TextFilter,\r\n        filter: 'includes',\r\n      },\r\n      {\r\n        Header: 'Start Time',\r\n        accessor: 'start_time',\r\n        Filter: TextFilter,\r\n        filter: 'includes',\r\n      },\r\n      {\r\n        Header: 'End Time',\r\n        accessor: 'end_time',\r\n        Filter: TextFilter,\r\n        filter: 'includes',\r\n      },\r\n      {\r\n        Header: 'Duration (min)',\r\n        accessor: 'duration',\r\n        Filter: TextFilter,\r\n        filter: 'includes',\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ columns, data }, useFilters);\r\n\r\n  return (\r\n    <div className=\"schedule-table\">\r\n      <h2>Schedule Table</h2>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>\r\n                  {column.render('Header')}\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map(row => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => (\r\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Simple text filter component\r\nfunction TextFilter({ column: { filterValue, setFilter } }) {\r\n  return (\r\n    <input\r\n      value={filterValue || ''}\r\n      onChange={e => setFilter(e.target.value || undefined)}\r\n      placeholder={`Filter...`}\r\n      style={{ width: '100%', marginTop: '5px', padding: '5px' }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ScheduleTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}