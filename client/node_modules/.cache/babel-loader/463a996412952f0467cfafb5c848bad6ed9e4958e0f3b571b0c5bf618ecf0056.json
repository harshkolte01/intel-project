{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\intel-project\\\\client\\\\src\\\\components\\\\GanttChartPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport GanttChartComponent from './GanttChartComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GanttChartPage() {\n  _s();\n  const [schedule, setSchedule] = useState([]);\n  const [machines, setMachines] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const baseUrl = process.env.NODE_ENV === 'production' ? 'http://server:8000' : 'http://localhost:8000';\n        const [scheduleRes, machinesRes] = await Promise.all([axios.get(`${baseUrl}/schedule`), axios.get(`${baseUrl}/machines`)]);\n        setSchedule(scheduleRes.data || []);\n        setMachines(machinesRes.data || []);\n        setError(null);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Failed to load chart data.');\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gantt Chart View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: \"Back to Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GanttChartComponent, {\n      schedule: schedule,\n      machines: machines\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(GanttChartPage, \"W4gYwfjo7JAF0ppZNmCs1axy8+Y=\");\n_c = GanttChartPage;\nexport default GanttChartPage;\nvar _c;\n$RefreshReg$(_c, \"GanttChartPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","GanttChartComponent","jsxDEV","_jsxDEV","GanttChartPage","_s","schedule","setSchedule","machines","setMachines","error","setError","fetchData","baseUrl","process","env","NODE_ENV","scheduleRes","machinesRes","Promise","all","get","data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","to","_c","$RefreshReg$"],"sources":["C:/Coding/intel-project/client/src/components/GanttChartPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport GanttChartComponent from './GanttChartComponent';\r\n\r\nfunction GanttChartPage() {\r\n  const [schedule, setSchedule] = useState([]);\r\n  const [machines, setMachines] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const baseUrl = process.env.NODE_ENV === 'production' ? 'http://server:8000' : 'http://localhost:8000';\r\n        const [scheduleRes, machinesRes] = await Promise.all([\r\n          axios.get(`${baseUrl}/schedule`),\r\n          axios.get(`${baseUrl}/machines`),\r\n        ]);\r\n        setSchedule(scheduleRes.data || []);\r\n        setMachines(machinesRes.data || []);\r\n        setError(null);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError('Failed to load chart data.');\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Gantt Chart View</h1>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <Link to=\"/\">Back to Dashboard</Link>\r\n      <GanttChartComponent schedule={schedule} machines={machines} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GanttChartPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG,oBAAoB,GAAG,uBAAuB;QACtG,MAAM,CAACC,WAAW,EAAEC,WAAW,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACnDpB,KAAK,CAACqB,GAAG,CAAC,GAAGR,OAAO,WAAW,CAAC,EAChCb,KAAK,CAACqB,GAAG,CAAC,GAAGR,OAAO,WAAW,CAAC,CACjC,CAAC;QACFN,WAAW,CAACU,WAAW,CAACK,IAAI,IAAI,EAAE,CAAC;QACnCb,WAAW,CAACS,WAAW,CAACI,IAAI,IAAI,EAAE,CAAC;QACnCX,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOD,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CC,QAAQ,CAAC,4BAA4B,CAAC;MACxC;IACF,CAAC;IACDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAAsB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBnB,KAAK,iBAAIP,OAAA;MAAG2B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAEf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjD1B,OAAA,CAACJ,IAAI;MAACiC,EAAE,EAAC,GAAG;MAAAP,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrC1B,OAAA,CAACF,mBAAmB;MAACK,QAAQ,EAAEA,QAAS;MAACE,QAAQ,EAAEA;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV;AAACxB,EAAA,CAhCQD,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAkCvB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}