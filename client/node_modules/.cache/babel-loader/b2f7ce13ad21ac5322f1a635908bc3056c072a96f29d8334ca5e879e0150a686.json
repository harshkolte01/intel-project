{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding\\\\intel-project\\\\client\\\\src\\\\components\\\\JobFormComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction JobFormComponent({\n  onAddJob,\n  machines\n}) {\n  _s();\n  const [jobId, setJobId] = useState('');\n  const [operations, setOperations] = useState([{\n    machine_id: '',\n    duration: ''\n  }]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddJob({\n      job_id: jobId,\n      operations\n    });\n    setJobId('');\n    setOperations([{\n      machine_id: '',\n      duration: ''\n    }]);\n  };\n  const addOperation = () => {\n    setOperations([...operations, {\n      machine_id: '',\n      duration: ''\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Job ID\",\n        value: jobId,\n        onChange: e => setJobId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), operations.map((op, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"operation\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: op.machine_id,\n          onChange: e => {\n            const newOps = [...operations];\n            newOps[index].machine_id = e.target.value;\n            setOperations(newOps);\n          },\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Machine\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), machines.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: m.id,\n            children: m.name\n          }, m.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Duration (min)\",\n          value: op.duration,\n          onChange: e => {\n            const newOps = [...operations];\n            newOps[index].duration = e.target.value;\n            setOperations(newOps);\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addOperation,\n        children: \"Add Operation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(JobFormComponent, \"f6QwkPh6w13zA0xhIsUckMGiwAs=\");\n_c = JobFormComponent;\nexport default JobFormComponent;\nvar _c;\n$RefreshReg$(_c, \"JobFormComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","JobFormComponent","onAddJob","machines","_s","jobId","setJobId","operations","setOperations","machine_id","duration","handleSubmit","e","preventDefault","job_id","addOperation","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","map","op","index","newOps","m","id","name","onClick","_c","$RefreshReg$"],"sources":["C:/Coding/intel-project/client/src/components/JobFormComponent.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction JobFormComponent({ onAddJob, machines }) {\r\n  const [jobId, setJobId] = useState('');\r\n  const [operations, setOperations] = useState([{ machine_id: '', duration: '' }]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onAddJob({ job_id: jobId, operations });\r\n    setJobId('');\r\n    setOperations([{ machine_id: '', duration: '' }]);\r\n  };\r\n\r\n  const addOperation = () => {\r\n    setOperations([...operations, { machine_id: '', duration: '' }]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"job-form\">\r\n      <h2>Add New Job</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Job ID\"\r\n          value={jobId}\r\n          onChange={(e) => setJobId(e.target.value)}\r\n          required\r\n        />\r\n        {operations.map((op, index) => (\r\n          <div key={index} className=\"operation\">\r\n            <select\r\n              value={op.machine_id}\r\n              onChange={(e) => {\r\n                const newOps = [...operations];\r\n                newOps[index].machine_id = e.target.value;\r\n                setOperations(newOps);\r\n              }}\r\n              required\r\n            >\r\n              <option value=\"\">Select Machine</option>\r\n              {machines.map((m) => (\r\n                <option key={m.id} value={m.id}>{m.name}</option>\r\n              ))}\r\n            </select>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Duration (min)\"\r\n              value={op.duration}\r\n              onChange={(e) => {\r\n                const newOps = [...operations];\r\n                newOps[index].duration = e.target.value;\r\n                setOperations(newOps);\r\n              }}\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n        <button type=\"button\" onClick={addOperation}>Add Operation</button>\r\n        <button type=\"submit\">Submit Job</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobFormComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}